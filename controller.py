from telegram.update import Update
import os

# My modules
import expenses
import incomes
import balance
import exchange
import month
import deleting
import utils


@utils.authorize
def start(update: Update, context):
    update.message.reply_text("""
    –ë–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –¥–æ—Ö–æ–¥–æ–≤.
    """)

@utils.authorize
def help(update: Update, context):
    update.message.reply_text("""
    –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:
/start  -> –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã.
/help   -> –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
bl  -> –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å.
bl {—á–∏—Å–ª–æ}  -> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å.
bl {–≤–∞–ª—é—Ç–∞}  -> –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –±–∞–ª–∞–Ω—Å –≤ –¥—Ä—É–≥—É—é –≤–∞–ª—é—Ç—É.
{—á–∏—Å–ª–æ} {–∫–∞—Ç–µ–≥–æ—Ä–∏—è} {–æ–ø–∏—Å–∞–Ω–∏–µ}  -> –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥. –û–ø–∏—Å–∞–Ω–∏–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ.
del {–Ω–æ–º–µ—Ä}  -> –£–¥–∞–ª–∏—Ç—å —Ä–∞—Å—Ö–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É –≤ —Å–ø–∏—Å–∫–µ –º–µ—Å—è—Ü–∞. -1 –∏–ª–∏ \"last\" —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π.
+ {—á–∏—Å–ª–æ} {–∏—Å—Ç–æ—á–Ω–∏–∫}  -> –î–æ–±–∞–≤–∏—Ç—å –¥–æ—Ö–æ–¥.
–º–µ—Å—è—Ü   -> –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü.
–º–µ—Å—è—Ü YYYY.MM  ->  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –º–µ—Å—è—Ü YYYY.MM
cv {–∏–∑} {–≤}  -> –ö—É—Ä—Å –ø–µ—Ä–≤–æ–π –≤–∞–ª—é—Ç—ã –∫–æ –≤—Ç–æ—Ä–æ–π.
cv {—á–∏—Å–ª–æ} {–∏–∑} {–≤}  -> –ü–µ—Ä–µ–≤–æ–¥ —Å—É–º–º—ã –∏–∑ –æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –≤ –¥—Ä—É–≥—É—é.
    """)

@utils.authorize
def expense(update: Update, context):
    expenses.handle_expense(update)

@utils.authorize
def income(update: Update, context):
    incomes.handle_income(update)

@utils.authorize
def balance_query(update: Update, context):
    balance.handle_balance_query(update, API_KEY=os.getenv("EXCHANGE_RATE_API_KEY"))

@utils.authorize
def convert(update: Update, context):
    exchange.handle_exchange_query(update, API_KEY=os.getenv("EXCHANGE_RATE_API_KEY"))

@utils.authorize
def month_query(update: Update, context):
    month.handle_month_query(update)

@utils.authorize
def delete_expense(update: Update, context):
    deleting.handle_expense_deleting(update)

# Handle message based on its type (first word determines the type)
@utils.authorize
def handle_message(update: Update, context):
    message_type = utils.get_type_of_message(update.message.text)
    match message_type:
        case "expense":
            expenses.handle_expense(update)
        case "income":
            incomes.handle_income(update)
        case "balance":
            balance.handle_balance_query(update, API_KEY=os.getenv("EXCHANGE_RATE_API_KEY"))
        case "exchange_query":
            exchange.handle_exchange_query(update, API_KEY=os.getenv("EXCHANGE_RATE_API_KEY"))
        case "month":
            month.handle_month_query(update)
        case "delete":
            deleting.handle_expense_deleting(update)
        case _:
            update.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞üòê")